@model WebParaMelvin.Models.Info_general

@{
    ViewBag.Title = "Informacion General";
    WebParaMelvin.Models.ceisamco_form_s_oEntities db = new WebParaMelvin.Models.ceisamco_form_s_oEntities();
}

<style>
    input {
        margin: 4px
    }

    select {
        margin: 4px
    }

    label {
        margin-left: 4px
    }
</style>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="row">
        <h4>Información General</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="col-md-4">
            <div class="form-group">
                @Html.LabelFor(model => model.Empresa, htmlAttributes: new { @class = "control-label col-md-2" })

                @{ var fso = Session["FormSO"] as WebParaMelvin.Models.Formulario_S_O;
                    var empresa = db.Empresas.Find(fso.Id_Empresa);

                }
                <span class="control-label">:&nbsp;&nbsp;&nbsp; @empresa.Nombre</span>


            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Fecha, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Fecha, new { htmlAttributes = new { @class = "form-control", @required = "", @type = "date" } })
                    @Html.ValidationMessageFor(model => model.Fecha, "", new { @class = "text-danger" })

                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Departamento, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Departamento, new { htmlAttributes = new { @class = "form-control", @required = "" } })
                    @Html.ValidationMessageFor(model => model.Departamento, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Posicion, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Posicion, new { htmlAttributes = new { @class = "form-control", @required = "" } })
                    @Html.ValidationMessageFor(model => model.Posicion, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Tipo_de_evaluacion,"Tipo de Evaluación", htmlAttributes: new { @class = "control-label col-md-6" })
                <div class="col-md-10">

                    @Html.DropDownList("Tipo_de_evaluacion", new SelectList(new List<string> { "Pre-empleo", "Vigilancia", "Cambio de Posicion", "Salida" }), htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Tipo_de_evaluacion, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Id_Empleado,"Id Empleado", htmlAttributes: new { @class = "control-label col-md-6" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Id_Empleado, new { htmlAttributes = new { @class = "form-control", @required = "" } })
                    @Html.ValidationMessageFor(model => model.Id_Empleado, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>
        <div class="col-md-4">

            <div class="form-group">
                @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control", @required = "" } })
                    @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Apellido, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Apellido, new { htmlAttributes = new { @class = "form-control", @required = "" } })
                    @Html.ValidationMessageFor(model => model.Apellido, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.Sexo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("Sexo", new SelectList(new List<string> { "Masculino", "Femenino" }), htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Sexo, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Cedula, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Cedula, new { htmlAttributes = new { @class = "form-control", @required = "" } })
                    @Html.ValidationMessageFor(model => model.Cedula, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Fecha_de_nacimiento,"Fecha de Nacimiento", htmlAttributes: new { @class = "control-label col-md-6" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Fecha_de_nacimiento, new { htmlAttributes = new { @class = "form-control", @required = "", @type = "date", @onkeyup= "_calculateAge()", @onchange= "_calculateAge()" } })
                    @Html.ValidationMessageFor(model => model.Fecha_de_nacimiento, "", new { @class = "text-danger" })
                    @*<button onclick="_calculateAge()" class="btn btn-danger">calcular</button>*@
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Edad, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Edad, new { htmlAttributes = new { @class = "form-control", @required = "" ,@readonly="",@type="number" } })
                    @Html.ValidationMessageFor(model => model.Edad, "", new { @class = "text-danger" })
                   
                </div>
            </div>




        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Continuar>>" class="btn btn-default" />
            </div>
        </div>
    </div>

}

<div>

</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
<script>
   
    function _calculateAge() { 
        var birthday = document.getElementById('Fecha_de_nacimiento').value;
        var ano = new Date().getFullYear();
        var parts = birthday.split("-");

        var age = ano - eval(parts[0]);
        if (age < 18) {
            alert('La persona debe ser mayor de edad');
            document.getElementById('Edad').value = "";
        }
        else {
            document.getElementById('Edad').value = age;
        }
    }
    
    </script>
}
